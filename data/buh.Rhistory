months = CFfactor(cf,"month")
head(months)
str(months)
pdsi_raster <- rast(ncfname)
pdsi_raster
plot(pdsi_raster)
mean_test = mean(pdsi_raster)
plot(mean_test)
ls()
us_sf
str(us_sf)
us_sf@data
attributes(us_sf)
conus_sf
selected_sf <- conus_sf[conus_sf$ID %in% c("washington","oregon","california","arizona","new mexico","nevada","idaho","utah","colorado","wyoming","montana"),]
selected_geom <- st_geometry(selected_sf)
plot(selected_geom)
county_sf <- st_as_sf(map("county", plot = FALSE, fill = TRUE))
county_sf$state <- sub(",.*", "", county_sf$ID)
selected_county <- county_sf[county_sf$state %in% c("washington","oregon","california","arizona","new mexico","nevada","idaho","utah","colorado","wyoming","montana"),]
plot(selected_county)
county_geom <- st_geometry(selected_county)
plot(county_geom)
mean_test
install.packages("exactextractr")
library(exactextractr)
summarize_state <- exact_extract(mean_test, conus_sf)
library(ncdf4)
library(CFtime)
library(lattice)
library(RColorBrewer)
library(maps)
library(sf)
library(terra)
library(tidyterra)
library(classInt)
library(ggplot2)
conus_sf <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
us_sf <- st_geometry(conus_sf)
plot(us_sf)
ncpath <- "/Users/isaacbell/Documents/geog490/final_proj/data/"
ncname <- "2000to2024"
ncfname <- paste(ncpath, ncname, ".nc", sep="")
dname <- "pdsi"
ncin <- nc_open(ncfname)
print(ncin)
dname <- "daily_mean_palmer_drought_severity_index"
lon <- ncvar_get(ncin,"lon")
nlon <- dim(lon)
lat <- ncvar_get(ncin,"lat")
nlat <- dim(lat)
print(c(nlon,nlat))
time <- ncvar_get(ncin,"day")
head(time)
tunits <- ncatt_get(ncin,"day","units")
tunits
nt <- dim(time)
nt
cf <- CFtime(tunits$value, calendar = "proleptic_gregorian", time) # convert time to CFtime class
timestamps <- CFtimestamp(cf)
time_cf <- CFparse(cf, timestamps)
head(time_cf)
pdsi_array <- ncvar_get(ncin,dname)
dlname <- ncatt_get(ncin,dname,"long_name")
dunits <- ncatt_get(ncin,dname,"units")
fillvalue <- ncatt_get(ncin,dname,"_FillValue")
dim(pdsi_array)
ls()
head(us_sf)
title <- ncatt_get(ncin,0,"title")
institution <- ncatt_get(ncin,0,"institution")
datasource <- ncatt_get(ncin,0,"source")
references <- ncatt_get(ncin,0,"references")
history <- ncatt_get(ncin,0,"history")
Conventions <- ncatt_get(ncin,0,"Conventions")
dunits <- ncatt_get(ncin,dname,"units")
months = CFfactor(cf,"month")
head(months)
str(months)
pdsi_raster <- rast(ncfname)
pdsi_raster
plot(pdsi_raster)
mean_test = mean(pdsi_raster)
plot(mean_test)
ls()
us_sf
str(us_sf)
us_sf@data
attributes(us_sf)
conus_sf
selected_sf <- conus_sf[conus_sf$ID %in% c("washington","oregon","california","arizona","new mexico","nevada","idaho","utah","colorado","wyoming","montana"),]
selected_geom <- st_geometry(selected_sf)
plot(selected_geom)
county_sf <- st_as_sf(map("county", plot = FALSE, fill = TRUE))
county_sf$state <- sub(",.*", "", county_sf$ID)
selected_county <- county_sf[county_sf$state %in% c("washington","oregon","california","arizona","new mexico","nevada","idaho","utah","colorado","wyoming","montana"),]
plot(selected_county)
county_geom <- st_geometry(selected_county)
plot(county_geom)
mean_test
install.packages("exactextractr")
library(exactextractr)
summarize_state <- exact_extract(mean_test, conus_sf)
dim(pdsi_array)
pdsi_array[pdsi_array==fillvalue$value] <- NA
length(na.omit(as.vector(pdsi_array[,,1])))
m <- 1
pdsi_slice <- pdsi_array[,,m]
plot(pdsi_slice)
pdsi_slice
image(lon,lat,pdsi_slice, col=rev(brewer.pal(10,"RdYlGn")))
pdsi_array
image(lat,lon,pdsi_slice, col=rev(brewer.pal(10,"RdYlGn")))
ls()
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-50,-40,-30,-20,-10,0,10,20,30,40,50)
levelplot(pdsi_slice ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(rev(brewer.pal(10,"RdBu"))))
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-3,-2,-1,0,1,2,3)
levelplot(pdsi_slice ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(rev(brewer.pal(10,"RdYlGn"))))
m <- 3
pdsi_slice2 <- pdsi_array[,,m]
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-3,-2,-1,0,1,2,3)
levelplot(pdsi_slice2 ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(rev(brewer.pal(10,"RdYlGn"))))
library(raster)
prec <- getData('worldclim', var='prec', res=10)
prec
pdsi_raster
conus_sf$mean_alltime <- exact_extract(mean_test, conus_sf, 'mean')
plot(conus_sf)
selected_sf$mean_alltime <- exact_extract(mean_test, selected_sf, 'mean')
plot(selected_sf)
conus_sf
library(ncdf4)
library(CFtime)
library(lattice)
library(RColorBrewer)
library(maps)
library(sf)
library(terra)
library(tidyterra)
library(classInt)
library(ggplot2)
library(raster)
state_sf <- st_as_sf(map("state", plot = FALSE, fill = TRUE, crs = "+proj=longlat +ellps=WGS84"))
selected_sf <- state_sf[state_sf$ID %in% c("washington","oregon","california","arizona","new mexico","nevada","idaho","utah","colorado","wyoming","montana"),]
state_geom <- st_geometry(selected_sf)
plot(selected_sf)
state_sf <- st_as_sf(map("state", plot = FALSE, fill = TRUE, crs = "+proj=longlat +ellps=WGS84"))
selected_sf <- state_sf[state_sf$ID %in% c("washington","oregon","california","arizona","new mexico","nevada","idaho","utah","colorado","wyoming","montana"),]
state_geom <- st_geometry(selected_sf)
plot(selected_sf)
county_sf <- st_as_sf(map("county", plot = FALSE, fill = TRUE))
county_sf$state <- sub(",.*", "", county_sf$ID)
selected_county <- county_sf[county_sf$state %in% c("washington","oregon","california","arizona","new mexico","nevada","idaho","utah","colorado","wyoming","montana"),]
county_geom <- st_geometry(selected_county)
plot(selected_county)
ncpath <- "/Users/isaacbell/Documents/geog490/final_proj/data/"
ncname <- "2000to2024"
ncfname <- paste(ncpath, ncname, ".nc", sep="")
ncin <- nc_open(ncfname)
dname <- "daily_mean_palmer_drought_severity_index"
lon <- ncvar_get(ncin,"lon")
nlon <- dim(lon)
lat <- ncvar_get(ncin,"lat")
nlat <- dim(lat)
title <- ncatt_get(ncin,0,"title")
institution <- ncatt_get(ncin,0,"institution")
datasource <- ncatt_get(ncin,0,"source")
references <- ncatt_get(ncin,0,"references")
history <- ncatt_get(ncin,0,"history")
Conventions <- ncatt_get(ncin,0,"Conventions")
pdsi_array <- ncvar_get(ncin,dname)
dlname <- ncatt_get(ncin,dname,"long_name")
dunits <- ncatt_get(ncin,dname,"units")
fillvalue <- ncatt_get(ncin,dname,"_FillValue")
dim(pdsi_array)
time <- ncvar_get(ncin,"day")
tunits <- ncatt_get(ncin,"day","units")
nt <- dim(time)
cf <- CFtime(tunits$value, calendar = "proleptic_gregorian", time) # convert time to CFtime class
timestamps <- CFtimestamp(cf)
months = CFfactor(cf,"month")
time_cf <- CFparse(cf, timestamps)
head(time_cf)
pdsi_raster <- rast(ncfname)
mean_raster = mean(pdsi_raster)
plot(mean_raster)
selected_sf$mean_alltime <- exact_extract(mean_test, selected_sf, 'mean')
plot(selected_sf)
county_sf$mean_alltime <- exact_extract(mean_test, county_sf, 'mean')
plot(county_sf)
selected_county$mean_alltime <- exact_extract(mean_test, selected_county, 'mean')
plot(selected_county)
plot(pdsi_raster)
m <- 1
pdsi_slice <- pdsi_array[,,m]
pdsi_slice
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-4,-3,-2,-1,0,1,2,3,4)
levelplot(pdsi_slice ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(scale_color_brewer(palette="RdYlGn", direction=-1))))
m <- 1
pdsi_slice <- pdsi_array[,,m]
pdsi_slice
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-4,-3,-2,-1,0,1,2,3,4)
levelplot(pdsi_slice ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(scale_color_brewer(palette="RdYlGn", direction=-1)))
m <- 1
pdsi_slice <- pdsi_array[,,m]
pdsi_slice
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-4,-3,-2,-1,0,1,2,3,4)
levelplot(pdsi_slice2 ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(brewer.pal(10,"RdYlGn")))
m <- 3
pdsi_slice <- pdsi_array[,,m]
pdsi_slice
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-4,-3,-2,-1,0,1,2,3,4)
levelplot(pdsi_slice2 ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(brewer.pal(10,"RdYlGn")))
m <- 12
pdsi_slice <- pdsi_array[,,m]
pdsi_slice
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-4,-3,-2,-1,0,1,2,3,4)
levelplot(pdsi_slice2 ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(brewer.pal(10,"RdYlGn")))
dim(pdsi_array)
pdsi_array[pdsi_array==fillvalue$value] <- NA
length(na.omit(as.vector(pdsi_array[,,1])))
m <- 1
pdsi_slice <- pdsi_array[,,m]
m <- 1
pdsi_slice <- pdsi_array[,,m]
pdsi_slice
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-4,-3,-2,-1,0,1,2,3,4)
levelplot(pdsi_slice ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(brewer.pal(10,"RdYlGn")))
m <- 4
pdsi_slice2 <- pdsi_array[,,m]
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-4,-3,-2,-1,0,1,2,3,4)
levelplot(pdsi_slice2 ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(brewer.pal(10,"RdYlGn")))
plot(mean_raster)
plot(state_geom)
for (i in months) {}
m <- 0
pdsi_slice2 <- pdsi_array[,,m]
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-4,-3,-2,-1,0,1,2,3,4)
levelplot(pdsi_slice2 ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(brewer.pal(10,"RdYlGn")))
plot(mean_raster)
days <- CFfactor(cf, period = "day")
cf
timestamps
m <- 0
for (i in timestamps) {
m + 1
pdsi_slice <- pdsi_array[,,m]
selected_sf[, i] <- exact_extract(pdsi_slice, selected_sf, 'mean')
}
str(pdsi_slice2)
m <- 4
pdsi_slice2 <- pdsi_array[,,m]
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-4,-3,-2,-1,0,1,2,3,4)
levelplot(pdsi_slice2 ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(brewer.pal(10,"RdYlGn")))
m <- 1
pdsi_slice2 <- pdsi_array[,,m]
grid <- expand.grid(lon=lon, lat=lat)
cutpts <- c(-4,-3,-2,-1,0,1,2,3,4)
levelplot(pdsi_slice2 ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T,
col.regions=(brewer.pal(10,"RdYlGn")))
m <- 0
for (i in timestamps) {
m + 1
q <- subset(pdsi_raster, m)
selected_sf[, i] <- exact_extract(q, selected_sf, 'mean')
}
m <- 0
for (i in timestamps) {
m + 1
q <- pdsi_raster[[m]]
selected_sf[, i] <- exact_extract(q, selected_sf, 'mean')
}
ls()
ncin
pdsi_raster[1]
plot(pdsi_raster[1])
m <- 0
for (i in timestamps) {
m + 1
q <- pdsi_raster[[i]]
selected_sf[, i] <- exact_extract(q, selected_sf, 'mean')
}
time(r) <- timestamps
time(pdsi_raster) <- timestamps
head(names(r))
head(names(pdsi_raster))
names(pdsi_raster) <- timestamps
head(names(pdsi_raster))
for (i in timestamps) {
q <- pdsi_raster[[i]]
selected_sf[, i] <- exact_extract(q, selected_sf, 'mean')
}
head(names(pdsi_raster))
head(selected_sf)
selected_sf <- state_sf[state_sf$ID %in% c("washington","oregon","california","arizona","new mexico","nevada","idaho","utah","colorado","wyoming","montana"),]
selected_sf$mean_alltime <- exact_extract(mean_test, selected_sf, 'mean')
year_li <- list("2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024")
for (i in year_li){}
yr <- 2000
for (i in year_li){
yr + 1
}
yr <- 1999
idx <- 0
for (i in year_li){
yr + 1
current -> paste("raster",str(yr),sep="_")
}
yr <- 1999
idx <- 0
for (i in year_li){
yr + 1
current <- paste("raster",str(yr),sep="_")
}
current
str(yr)
yr
yr <- 1999
idx <- 0
for (i in year_li){
yr <- yr + 1
current <- paste("raster",str(yr),sep="_")
}
yr <- 1999
idx <- 0
for (i in year_li){
yr <- yr + 1
current <- paste("raster",yr,sep="_")
}
current
time(pdsi_raster)
pdsi_raster
time(pdsi_raster) <- timestamps
stamps_date <- as.Date(timestamps)
time(pdsi_raster) <- stamps_date
pdsi_raster
years <- CFfactor(cf,"year")
yr_stamps_date <- as.Date(years)
yr <- 1999
idx <- 0
for (i in year_li){
yr <- yr + 1
current <- paste("raster",yr,sep="_")
assign(current,)
}
yr <- 1999
for (i in year_li){
yr <- yr + 1
date <- cat(sprintf("\"%s\"-01-01\n",yr))
print(date)
a <- pdsi_raster[[time(pdsi_raster) >= date & time(pdsi_raster) < date]]
current <- paste("raster",yr,sep="_")
assign(current,a)
}
yr <- 1999
for (i in year_li){
yr <- yr + 1
date <- sprintf("\"%s\"-01-01\n",yr)
print(date)
a <- pdsi_raster[[time(pdsi_raster) >= date & time(pdsi_raster) < date]]
current <- paste("raster",yr,sep="_")
assign(current,a)
}
yr <- 1999
for (i in year_li){
yr <- yr + 1
date <- cat(sprintf("\%s\-01-01\n",yr))
for (i in year_li){
date <- paste0(i,"-01-01")
print(date)
a <- pdsi_raster[[time(pdsi_raster) >= date & time(pdsi_raster) < date]]
current <- paste("raster",yr,sep="_")
assign(current,a)
}
for (i in year_li){
date <- paste0(i,"-01-01")
print(date)
a <- pdsi_raster[time(pdsi_raster) >= date & time(pdsi_raster) < date]
current <- paste("raster",yr,sep="_")
assign(current,a)
}
ls()
for (i in year_li){
date <- paste0(i,"-01-01")
a <- pdsi_raster[[time(pdsi_raster) >= date & time(pdsi_raster) < date]]
current <- paste("raster",yr,sep="_")
assign(current,a)
}
head(time(pdsi_raster))
a <- pdsi_raster[[time(pdsi_raster) >= "2017-01-01" & time(stack) < "2018-01-01"]]
a <- pdsi_raster[[time(pdsi_raster) >= "2017-01-01" & time(pdsi_raster) < "2018-01-01"]]
p
a
for (i in year_li){
date <- paste0(i,"-01-01")
a <- pdsi_raster[[time(pdsi_raster) >= toString(date) & time(pdsi_raster) < toString(date)]]
current <- paste("raster",yr,sep="_")
assign(current,a)
}
for (i in year_li){
date <- paste0(i,"-01-01")
a <- pdsi_raster[[time(pdsi_raster) >= toString(date) & time(pdsi_raster) < toString(date)]]
current <- paste("raster",i,sep="_")
assign(current,a)
}
for (i in year_li){
date <- paste0(i,"-01-01")
a <- pdsi_raster[[time(pdsi_raster) >= paste0(i,"-01-01") & time(pdsi_raster) < paste0(i,"-01-01")]]
current <- paste("raster",i,sep="_")
assign(current,a)
}
for (i in year_li){
date <- paste0(i,"-01-01")
a <- pdsi_raster[[time(pdsi_raster) >= as.date(paste0(i,"-01-01")) & time(pdsi_raster) < as.date(paste0(i,"-01-01"))]]
current <- paste("raster",i,sep="_")
assign(current,a)
}
for (i in year_li){
date <- paste0(i,"-01-01")
a <- pdsi_raster[[time(pdsi_raster) >= as.Date(paste0(i,"-01-01")) & time(pdsi_raster) < as.Date(paste0(i,"-01-01"))]]
current <- paste("raster",i,sep="_")
assign(current,a)
}
for (i in year_li){
date <- paste0(i,"-01-01")
print(date)
}
for (i in year_li){
date <- paste0(i,"-01-01")
print(toString(date))
}
test <- pdsi_raster["2017"]
test
for (i in year_li){
a <- pdsi_raster[i]
current <- paste("raster",i,sep="_")
assign(current,a)
}
ls()
for (i in year_li){
a <- pdsi_raster[i]
selected_sf[, i] <- exact_extract(a, selected_sf, 'mean')
}
warnings()
plot(selected_sf)
head(selected_sf)
install.packages("reshape2")
library(reshape2)
selected_sf$metadata <- row.names(df)
selected_sf <- melt(selected_sf, "metadata")
selected_sf$metadata <- row.names(selected_sf)
selected_sf <- melt(selected_sf, "metadata")
selected_sf$metadata <- row.names(selected_sf)
selected_sf <- melt(selected_sf, value.name = "metadata")
selected_sf$metadata <- row.names(selected_sf)
ggplot(selected_sf, aes(variable, value, group = metadata, color = metadata)) +
geom_line()
states_df <- st_drop_geometry(selected_sf)
states_df$metadata <- row.names(states_df)
ggplot(states_df, aes(variable, value, group = metadata, color = metadata)) +
geom_line()
state_sf <- st_as_sf(map("state", plot = FALSE, fill = TRUE, crs = "+proj=longlat +ellps=WGS84"))
selected_sf <- state_sf[state_sf$ID %in% c("washington","oregon","california","arizona","new mexico","nevada","idaho","utah","colorado","wyoming","montana"),]
state_geom <- st_geometry(selected_sf)
plot(selected_sf)
selected_sf$mean_alltime <- exact_extract(mean_test, selected_sf, 'mean')
plot(selected_sf)
states_df <- st_drop_geometry(selected_sf)
states_df$metadata <- row.names(states_df)
states_df <- melt(states_df, "metadata")
ggplot(states_df, aes(variable, value, group = metadata, color = metadata)) +
geom_line()
states_df <- st_drop_geometry(selected_sf)
head(states_df)
for (i in year_li){
a <- pdsi_raster[i]
selected_sf[, i] <- exact_extract(a, selected_sf, 'mean')
}
states_df <- st_drop_geometry(selected_sf)
head(states_df)
drops <- c("ID","mean_alltime")
select_states_df <- states_df[ , !(names(states_df) %in% drops)]
head(select_states_df)
select_states_df$metadata <- row.names(select_states_df)
select_states_df <- melt(select_states_df, "metadata")
ggplot(select_states_df, aes(variable, value, group = metadata, color = metadata)) +
geom_line()
savehistory("~/Documents/geog490/final_proj/data/buh.Rhistory")
